var searchIndex = JSON.parse('{\
"payment_settle_accounts":{"doc":"","t":"DNNDDNNNNGNNNNNNNNNDINIINDNEDEGNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLALKLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLIDDLLLLLLLLLLLKLLLLLLL","n":["Account","AccountLocked","CSVError","CSVTransactionReader","CSVTransactionResultStdoutWriter","CannotChargebackWithoutDispute","CannotDisputeWithoutDeposit","CannotResolveWithoutDispute","Chargeback","ClientId","Deposit","Dispute","DuplicateTransaction","InconsistenceBalance","InsufficientFunds","InvalidClient","InvalidTransactionAmount","InvalidTransactionId","InvalidTransactionType","MemoryThreadSafePaymentEngine","PaymentEngine","Resolve","Sink","Source","SyncError","Transaction","TransactionBeingDisputed","TransactionError","TransactionResultSummary","TransactionType","TxId","Withdrawal","amount","amount_or_err","available","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","client_id","client_id","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","create_with","default","default","deserialize","deserialize","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","held","into","into","into","into","into","into","into","into","iter","locked","new","new","new","new","process","process","process","program","provide","read","read","serialize","source","summary","summary","to_owned","to_owned","to_owned","to_owned","to_string","total","transaction_id","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write","Pipeline","TransactionPipeline","TransactionPipelineBuilder","borrow","borrow","borrow_mut","borrow_mut","csv_pipeline","fmt","fmt","from","from","into","into","run","run","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"payment_settle_accounts"],[152,"payment_settle_accounts::program"]],"d":["Represents the result of a transaction.","","","<code>CSVTransactionReader</code> is a wrapper around <code>csv::Reader</code>.","<code>CSVTransactionResultStdoutWriter</code> is a wrapper around …","","","","Represents a chargeback transaction.","Represents a client ID.","Represents a deposit transaction.","Represents a dispute transaction.","","","","","","","","A thread-safe payment engine that stores transaction …","Trait representing a payment engine. <code>PaymentEngine</code> is …","Represents a resolve transaction.","","","","Represents a transaction object.","","Error type for the transaction processing based on …","","Represents the type of a transaction.","Represents a transaction ID.","Represents a withdrawal transaction.","Returns the amount of the transaction.","Returns the amount of the transaction or an error if it is …","Returns the available amount in the transaction result.","","","","","","","","","","","","","","","","","Create a builder for building <code>Transaction</code>. On the builder, …","Returns the client ID associated with the transaction.","Returns the client ID associated with the transaction …","","","","","","","","","","Returns the default <code>CSVTransactionResultStdoutWriter</code>.","","","","","","","","","Formats the value using the given formatter.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a <code>TransactionResult</code> into a <code>TransactionResultCSV</code>.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the held amount in the transaction result.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns an iterator over the transactions in the CSV file.","Checks if the transaction result is locked.","Creates a new <code>CSVTransactionReader</code> with the given filename.","Creates a new <code>CSVTransactionResultStdoutWriter</code>.","Creates a new transaction result with default settle in 0 …","Creates a new <code>MemoryThreadSafePaymentEngine</code>.","Process a transaction using the payment engine.","Processes a transaction and updates the transaction result …","Processes the given transaction.","This module contains the definition of the pipeline trait …","","","","","","Get a summary of the processed transactions.","Returns a summary of the transaction results.","","","","","","Returns the total amount in the transaction result.","Returns the transaction ID.","","","","","","","","","","","","","","","","","Returns the type of the transaction.","","","","","","","","","","Writes the transaction result to the CSV writer.","","Trait for defining a pipeline.","Represents a transaction pipeline, consisting of a source, …","Builder for constructing a transaction pipeline.","","","","","Constructs a CSV transaction pipeline.","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Runs the pipeline.","","","","","","",""],"i":[0,5,5,0,0,5,5,5,9,0,9,9,5,5,5,5,5,5,5,0,0,9,0,0,5,0,5,0,0,0,0,9,1,1,7,15,12,9,1,7,14,5,10,15,12,9,1,7,14,5,10,1,1,7,9,1,7,10,9,1,7,10,7,12,10,9,1,9,1,7,14,15,12,9,1,7,14,5,5,10,15,12,9,1,7,14,14,5,5,5,10,7,15,12,9,1,7,14,5,10,15,7,15,12,7,10,34,7,10,0,5,33,15,14,5,34,10,9,1,7,10,5,7,1,15,12,9,1,7,14,5,10,15,12,9,1,7,14,5,10,1,15,12,9,1,7,14,5,10,35,12,12,0,0,0,31,32,31,32,32,31,32,31,32,31,32,29,31,31,32,31,32,31,32],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[3,[2]]]],[[1,4],[[6,[2,5]]]],[7,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1,8],[7,8],[9,9],[1,1],[7,7],[10,10],[[]],[[]],[[]],[[]],[[8,2,2,11],7],[[],12],[[],10],[13,[[6,[9]]]],[13,[[6,[1]]]],[[9,9],11],[[1,1],11],[[7,7],11],[[14,14],11],[[15,16],17],[[12,16],17],[[9,16],17],[[1,16],17],[[7,16],17],[[14,16],17],[[5,16],17],[[5,16],17],[[10,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[7,14],[18,5],[[]],[19,5],[[]],[7,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[7,11],[4,15],[[],12],[8,7],[[],10],[1,[[6,[5]]]],[[7,1],[[6,[5]]]],[[10,1],[[6,[5]]]],0,[20],[[],[[6,[[22,[21]],5]]]],[15,[[6,[[22,[21]],5]]]],[[14,23],6],[5,[[3,[24]]]],[[],[[6,[[22,[21]],5]]]],[10,[[6,[[22,[21]],5]]]],[[]],[[]],[[]],[[]],[[],25],[7,2],[1,26],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[1,9],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[14,[[6,[5]]]],[[12,[28,[14]]],[[6,[5]]]],[[12,14],[[6,[5]]]],0,0,0,[[]],[[]],[[]],[[]],[4,[[22,[29]]]],[[[31,[30,30,30]],16],17],[[32,16],17],[[]],[[]],[[]],[[]],[[],[[6,[5]]]],[[[31,[33,34,35]]],[[6,[5]]]],[[],6],[[],6],[[],6],[[],6],[[],27],[[],27]],"c":[],"p":[[3,"Transaction"],[3,"Decimal"],[4,"Option"],[15,"str"],[4,"TransactionError"],[4,"Result"],[3,"Account"],[6,"ClientId"],[4,"TransactionType"],[3,"MemoryThreadSafePaymentEngine"],[15,"bool"],[3,"CSVTransactionResultStdoutWriter"],[8,"Deserializer"],[3,"TransactionResultSummary"],[3,"CSVTransactionReader"],[3,"Formatter"],[6,"Result"],[3,"Error"],[3,"PoisonError"],[3,"Demand"],[8,"Iterator"],[3,"Box"],[8,"Serializer"],[8,"Error"],[3,"String"],[15,"u32"],[3,"TypeId"],[8,"Into"],[8,"Pipeline"],[8,"Debug"],[3,"TransactionPipeline"],[3,"TransactionPipelineBuilder"],[8,"Source"],[8,"PaymentEngine"],[8,"Sink"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
