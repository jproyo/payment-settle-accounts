var searchIndex = JSON.parse('{\
"payment_settle_accounts":{"doc":"","t":"NDDDNGNNNNNNNNDINIINDEDEGNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLALKLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLIDDLLLLLLLLLLLKLLLLLLL","n":["CSVError","CSVTransactionReader","CSVTransactionResultStdoutWriter","CentDenomination","Chargeback","ClientId","Deposit","Dispute","InconsistenceBalance","InsufficientFunds","InvalidClient","InvalidTransactionAmount","InvalidTransactionId","InvalidTransactionType","MemoryThreadSafePaymentEngine","PaymentEngine","Resolve","Sink","Source","SyncError","Transaction","TransactionError","TransactionResult","TransactionType","TxId","Withdrawal","add","add_assign","amount","amount_or_err","as_f64","available","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","builder","client_id","client_id","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","default","deref","deserialize","deserialize","deserialize","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_f64","hash","held","into","into","into","into","into","into","into","into","iter","locked","new","new","new","partial_cmp","process","process","process","program","provide","read","read","serialize","should_be_tracked","source","sub","sub_assign","summary","summary","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","total","transaction_id","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write","Pipeline","TransactionPipeline","TransactionPipelineBuilder","borrow","borrow","borrow_mut","borrow_mut","csv_pipeline","fmt","fmt","from","from","into","into","run","run","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"payment_settle_accounts"],[162,"payment_settle_accounts::program"]],"d":["","<code>CSVTransactionReader</code> is a wrapper around <code>csv::Reader</code>.","<code>CSVTransactionResultStdoutWriter</code> is a wrapper around …","Represents a monetary value in cents denomination to avoid …","Represents a chargeback transaction.","Represents a client ID.","Represents a deposit transaction.","Represents a dispute transaction.","","","","","","","A thread-safe payment engine that stores transaction …","Trait representing a payment engine. <code>PaymentEngine</code> is …","Represents a resolve transaction.","","","","Represents a transaction object.","Error type for the transaction processing based on …","Represents the result of a transaction.","Represents the type of a transaction.","Represents a transaction ID.","Represents a withdrawal transaction.","","","Returns the amount of the transaction.","Returns the amount of the transaction or an error if it is …","Returns the value as a <code>f64</code> representing the monetary value.","Returns the available amount in the transaction result.","","","","","","","","","","","","","","","","","Create a builder for building <code>Transaction</code>. On the builder, …","Create a builder for building <code>TransactionResult</code>. On the …","Returns the client ID associated with the transaction.","Returns the client ID associated with the transaction …","","","","","","","","","","","","Returns the default <code>CSVTransactionResultStdoutWriter</code>.","","","","","","","","","","","","Formats the value using the given formatter.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>CentDenomination</code> from a <code>f64</code> value representing …","","Returns the held amount in the transaction result.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns an iterator over the transactions in the CSV file.","Checks if the transaction result is locked.","Creates a new <code>CSVTransactionReader</code> with the given filename.","Creates a new <code>CSVTransactionResultStdoutWriter</code>.","Creates a new <code>MemoryThreadSafePaymentEngine</code>.","","Process a transaction using the payment engine.","Processes a transaction and updates the transaction result …","Processes the given transaction.","This module contains the definition of the pipeline trait …","","","","","Checks if the transaction should be tracked.","","","","Get a summary of the processed transactions.","Returns a summary of the transaction results.","","","","","","","Returns the total amount in the transaction result.","Returns the transaction ID.","","","","","","","","","","","","","","","","","Returns the type of the transaction.","","","","","","","","","","","Writes the transaction result to the CSV writer.","Trait for defining a pipeline.","Represents a transaction pipeline, consisting of a source, …","Builder for constructing a transaction pipeline.","","","","","Constructs a CSV transaction pipeline.","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Runs the pipeline.","","","","","","",""],"i":[5,0,0,0,10,0,10,10,5,5,5,5,5,5,0,0,10,0,0,5,0,0,0,0,0,10,1,1,2,2,1,8,16,13,10,1,2,8,5,11,16,13,10,1,2,8,5,11,2,8,2,8,10,1,2,8,11,10,1,2,8,11,1,13,11,1,10,1,2,10,1,2,8,1,16,13,10,1,2,8,5,5,11,16,13,10,1,1,1,2,8,5,5,5,11,1,1,8,16,13,10,1,2,8,5,11,16,8,16,13,11,1,38,8,11,0,5,37,16,1,2,5,1,1,38,11,10,1,2,8,11,5,8,2,16,13,10,1,2,8,5,11,16,13,10,1,2,8,5,11,2,16,13,10,1,2,8,5,11,39,13,13,0,0,0,35,36,35,36,36,35,36,35,36,35,36,33,35,35,36,35,36,35,36],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1]],[[1,1]],[2,[[3,[1]]]],[[2,4],[[6,[1,5]]]],[1,7],[8,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[2,9],[8,9],[10,10],[1,1],[2,2],[8,8],[11,11],[[]],[[]],[[]],[[]],[[]],[[1,1],12],[[],13],[[],11],[1],[14,[[6,[10]]]],[14,[[6,[1]]]],[14,[[6,[2]]]],[[10,10],15],[[1,1],15],[[2,2],15],[[8,8],15],[[],15],[[16,17],18],[[13,17],18],[[10,17],18],[[1,17],18],[[2,17],18],[[8,17],18],[[5,17],18],[[5,17],18],[[11,17],18],[[]],[[]],[[]],[[]],[19,1],[7,1],[[]],[[]],[20,5],[21,5],[[]],[[]],[7,1],[[1,22]],[8,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[8,15],[4,16],[[],13],[[],11],[[1,1],[[3,[12]]]],[2,[[6,[5]]]],[[8,2,[23,[2]]],[[6,[5]]]],[[11,2],[[6,[5]]]],0,[24],[[],[[6,[[26,[25]],5]]]],[16,[[6,[[26,[25]],5]]]],[[1,27],6],[2,15],[5,[[3,[28]]]],[[1,1]],[[1,1]],[[],[[6,[[26,[25]],5]]]],[11,[[6,[[26,[25]],5]]]],[[]],[[]],[[]],[[]],[[]],[[],29],[8,1],[2,30],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[2,10],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[8,[[6,[5]]]],[[13,8],[[6,[5]]]],[[13,[32,[0]]],[[6,[5]]]],0,0,0,[[]],[[]],[[]],[[]],[4,[[26,[33]]]],[[[35,[34,34,34]],17],18],[[36,17],18],[[]],[[]],[[]],[[]],[[],[[6,[5]]]],[[[35,[37,38,39]]],[[6,[5]]]],[[],6],[[],6],[[],6],[[],6],[[],31],[[],31]],"c":[],"p":[[3,"CentDenomination"],[3,"Transaction"],[4,"Option"],[15,"str"],[4,"TransactionError"],[4,"Result"],[15,"f64"],[3,"TransactionResult"],[6,"ClientId"],[4,"TransactionType"],[3,"MemoryThreadSafePaymentEngine"],[4,"Ordering"],[3,"CSVTransactionResultStdoutWriter"],[8,"Deserializer"],[15,"bool"],[3,"CSVTransactionReader"],[3,"Formatter"],[6,"Result"],[15,"i64"],[3,"PoisonError"],[3,"Error"],[8,"Hasher"],[15,"slice"],[3,"Demand"],[8,"Iterator"],[3,"Box"],[8,"Serializer"],[8,"Error"],[3,"String"],[15,"u32"],[3,"TypeId"],[8,"Into"],[8,"Pipeline"],[8,"Debug"],[3,"TransactionPipeline"],[3,"TransactionPipelineBuilder"],[8,"Source"],[8,"PaymentEngine"],[8,"Sink"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
